<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="panel2.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        PV+yW0PGVdCfct/3tlWZLfMuLeivTb56pby4rc52ZSO23Lp1q7cGqsDVlVStf+37OpmqE5P6wYrdfhKQ
        bdNWdoJs++KCXvK/61vgPb9HcpVJBT3TvVMytynJv0s+5pa8Ohmb96bUx/6LriJvkjG3WtB/P/mBQV6f
        zH2K4CoPdh+cI/MtLeh6uZfsiN7PZ3frmpZxN9m6NeNWQbvtk5Darl1/G7y2LZlS2OuE59Fttjsj23xU
        QS/5W32jvOcjm5WpBf3TBvOdOx/ZVm01GXOrBX209Wv+vrQ2/FAbYpbMp6AvlZ2w1datp7g10PMkZGyZ
        N0Vhf8p9z2+T3xnZ5qMLesnf6751fXQ9Ns8amVrQv38w37nzLW3VVpMx91bQnzqYbk4+rg0zWeZR0OfK
        xve+Kte6dSDjrnESsvfCftWkpt6H4bY/u012Z2SbVynoJa/VEwdj86yRWwt6pqmP/+tj3bH5z5X6+H/y
        I1VTZLxdFfSS175vMO3U/Otk1m2NTK+gz5EN17p1PD1PQta+NVAnBrv9Nni2bVjY39heulOy3asV9JLX
        lxzop2RKQX/5YJ5Lyae1VVxFxttjQX/6YNo5+QttmEkyvYI+RTa4DpJat45nqychuy7sd13e21ULesk0
        3zqYZ41MKeg9v7h6TL6/reIqMt7uCnrJ6/90MP3U/HzyDm2YW2XapQV9zd9DH+bt2+pdhqyQ1q3j2eqt
        gWGqsD+nLZqdyHvao6A/PFn7+yc3FvS8/qTB9JeUug3wuLaqR8tYey3oSwtt5cGfvb1Npj1mOb1y40++
        nlRWRuvW8fQ8CVnzqvz+Tz6Senxu7PXD3OnHvPYm7+XqBb1kuvqZ1DcfzHdsbivoXz6Y/tLy8raqR8tY
        uyzoJdP80GCeqflvySPbMDfKdAr6mKyE1q3j6XlroMdJyOva8DX+1Me8FPYdyHvYpaCXTPuEpH6femyc
        ubm2oOe16lr3Xw6mvcT8eFvdo2WsPRf0Zw3mmZMvbMPcKNMp6ENZAa1bx1PFcGu3Bu55Fj5/m1PY69/C
        bpvU7Fnet24FvWT6D0l+62D+pbmpoH/0YNpLzZPbKh8l4+y2oJdM96OD+aam6sZj2jDXyjQK+pUsuApL
        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
        FN5qtTpWlJdG61YAOLVBMT4mWrcCwLm0QjxWoOfEVTkAnFMrxmNFemq0bgWAc0tBXvqlOK1bAeBSpCjX
        Y2tzP3Z3VQ4AlyYFuhrLTCnqWrcCwCVLoa6iXgV7rJBXtG4FgK1I0f4zyUtbAX9F8tzkUe1lAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACA83qbt/l/C/aSn3y+hmMAAAAASUVORK5CYII=
</value>
  </data>
</root>